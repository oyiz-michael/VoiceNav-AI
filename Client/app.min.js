const CONFIG={REGION:"us-east-1",BUCKET:"voicenav-bucket",PREFIX:"audio-store/",WS_URL:"wss://ry6pg133uf.execute-api.us-east-1.amazonaws.com/production",RECORDING_FORMAT:"audio/webm",MAX_RECORDING_TIME:3e4,SHOW_DEBUG_LOG:!0,AUTO_RECONNECT:!0,RECONNECT_DELAY:1e3};let ws;function ensureWS(){ws&&ws.readyState===WebSocket.OPEN||(ws=new WebSocket(CONFIG.WS_URL),ws.onopen=()=>log("WebSocket connected"),ws.onerror=e=>{console.error("WebSocket error:",e),log("WebSocket error occurred")},ws.onclose=e=>{log(`WebSocket closed (${e.code}) - reconnecting in ${CONFIG.RECONNECT_DELAY}ms`),CONFIG.AUTO_RECONNECT&&setTimeout(ensureWS,CONFIG.RECONNECT_DELAY)},ws.onmessage=e=>{log("‚Üê "+e.data);try{runIntent(JSON.parse(e.data))}catch(e){console.error("Failed to parse WebSocket message:",e),log("Invalid JSON received from server")}})}function runIntent(e){switch(e.action){case"click":{const t=document.querySelector(e.selector);!t&&e.selector.startsWith("#")?location.hash=e.selector:t?.click();break}case"navigate":location.href=e.url||e.selector;break;case"type":{const t=document.querySelector(e.selector);t&&(t.value=e.value??"");break}default:console.warn("Unknown intent:",e)}}async function uploadBlob(e,t){const o=PREFIX+crypto.randomUUID()+"-"+t,n=`https://${BUCKET}.s3.${REGION}.amazonaws.com/${o}`;log("‚Üí uploading "+o),await fetch(n,{method:"PUT",body:e,headers:{"Content-Type":e.type}}),log("‚úÖ upload done ‚Äì wait ~60 s")}let mediaRec,chunks=[];const micBtn=document.getElementById("micBtn");function render(e){document.querySelectorAll("nav a").forEach(e=>e.classList.remove("active")),(document.querySelector(`nav a[href='${e}']`)||document.querySelector("#nav-home")).classList.add("active");const t=document.getElementById("content");switch(e){case"#bookAppointment":case"#book":t.innerHTML="<h2>Book Appointment</h2>\n        <form onsubmit=\"alert('Demo: appointment booked');return false;\">\n          <input type=date required />\n          <input type=time required />\n          <input type=text placeholder='Name' required />\n          <button>Submit</button>\n        </form>";break;case"#contactSupport":case"#contact":t.innerHTML="<h2>Contact Support</h2>\n        <form onsubmit=\"alert('Demo: message sent');return false;\">\n          <textarea rows=4 placeholder='How can we help?'></textarea>\n          <button>Send</button>\n        </form>";break;default:t.innerHTML="<h2>Welcome to BrightSmile</h2>\n        <p>Say ‚Äúbook appointment‚Äù or ‚Äúclick contact support‚Äù.</p>"}}micBtn.onclick=async()=>{if(ensureWS(),mediaRec&&"inactive"!==mediaRec.state)mediaRec.stop(),micBtn.textContent="üé§ Start Recording",document.getElementById("status").textContent="";else{const e=await navigator.mediaDevices.getUserMedia({audio:!0});mediaRec=new MediaRecorder(e,{mimeType:"audio/webm"}),chunks=[],mediaRec.ondataavailable=e=>chunks.push(e.data),mediaRec.onstop=()=>uploadBlob(new Blob(chunks,{type:"audio/webm"}),"rec.webm"),mediaRec.start(),micBtn.textContent="‚è∏Ô∏è Stop",document.getElementById("status").textContent=" recording‚Ä¶"}};const log=e=>{const t=document.getElementById("log");t.textContent+=e+"\n",t.scrollTop=t.scrollHeight};window.addEventListener("hashchange",()=>render(location.hash)),render(location.hash||"#home");